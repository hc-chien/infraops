apiVersion: v1
kind: Service
metadata:
  name: egov-pg-service
  namespace: egov
  labels:
    app: egov-pg-service
    group: core
spec:
  ports:
  - port: 8080
    targetPort: 8080
    name: "spring-boot"  
  - port: 5005
    targetPort: 5005
    name: "jvm-debug"    
  selector:
    app: egov-pg-service
    group: core
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: egov-pg-service
  namespace: egov
spec:
  replicas: {{conf['egov-pg-service']['replicas']}}
  template:
    metadata:
      labels:
        app: egov-pg-service
        group: core
      annotations:
        pod.beta.kubernetes.io/init-containers: '[
          {
            "name": "egov-pg-service-db-migration",
            "image": "{{conf["egov-pg-service"]["db_migration_image"]}}",
            "env": [
              {"name": "DB_URL", "valueFrom": {"configMapKeyRef": {"name": "egov-config", "key": "db-url"}}},
              {"name": "SCHEMA_TABLE", "value": "egov_pg_service_schema"},
              {"name": "FLYWAY_USER", "valueFrom": {"secretKeyRef": {"name": "db", "key": "flyway-username"}}},
              {"name": "FLYWAY_PASSWORD", "valueFrom": {"secretKeyRef": {"name": "db", "key": "flyway-password"}}},
              {"name": "FLYWAY_LOCATIONS", "valueFrom": {"configMapKeyRef": {"name": "egov-config", "key": "flyway-locations"}}}
            ],
            "imagePullPolicy": "IfNotPresent"
          }
        ]'
    spec:
      containers:
      - name: egov-pg-service
        image: {{conf['egov-pg-service']['images'][0]}}
        ports:
        - containerPort: 8080
          name: "spring-boot"
        - containerPort: 5005
          name: "jvm-debug"
        env:
        - name: SPRING_DATASOURCE_URL
          valueFrom:
            configMapKeyRef:
              name: egov-config
              key: db-url
        - name: SPRING_DATASOURCE_USERNAME
          valueFrom:
            secretKeyRef:
              name: db
              key: username
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db
              key: password
        - name: FLYWAY_ENABLED
          value: "false"
        - name: SPRING_KAFKA_CONSUMER_VALUE_DESERIALIZER
          value: org.egov.tracer.kafka.deserializer.HashMapDeserializer
        - name: SPRING_KAFKA_CONSUMER_KEY_DESERIALIZER
          value: org.apache.kafka.common.serialization.StringDeserializer
        - name: SPRING_KAFKA_CONSUMER_GROUP_ID
          value: egov-pg-service
        - name: SPRING_KAFKA_PRODUCER_KEY_SERIALIZER
          value: org.apache.kafka.common.serialization.StringSerializer
        - name: SPRING_KAFKA_PRODUCER_VALUE_SERIALIZER
          value: org.springframework.kafka.support.serializer.JsonSerializer
        - name: EGOV_IDGEN_HOST
          value: "{{conf['egov-service-host']['egov-idgen']}}"
        - name: EGOV_BILLINGSERVICE_HOST
          value: "{{conf['egov-service-host']['billing-service']}}"
        - name: EGOV_COLLECTIONSERVICE_HOST
          value: "{{conf['egov-service-host']['collection-services']}}"
        - name: EGOV_COLLECTIONMASTERS_HOST
          value: "{{conf['egov-service-host']['collection-masters']}}"
        - name: EGOV_BANKACCOUNTSERVICE_HOST
          value: "{{conf['egov-service-host']['egf-master']}}"
        - name: EGOV_BUSINESSDETAILSSERVICE_HOST
          value: "{{conf['egov-service-host']['egov-common-masters']}}" 
        # - name: PAYTM_ACTIVE
        #   value: "{{conf['egov-pg-service']['paytm-active']}}"
        # - name: PHONEPE_ACTIVE
        #   value: "{{conf['egov-pg-service']['phonepe-active']}}"
        - name: AXIS_ACTIVE
          value: "true"
        - name: AXIS_CURRENCY
          value: "INR"
        - name: AXIS_MERCHANT_VPC_VERSION    
          value: "1"
        - name: AXIS_MERCHANT_VPC_COMMAND_PAY
          value: "pay"
        - name: AXIS_MERCHANT_VPC_COMMAND_STATUS
          value: "queryDR"
        - name: AXIS_LOCALE
          value: "en_IN"
        - name: AXIS_URL_DEBIT
          value: "https://migs.mastercard.com.au/vpcpay"
        - name: AXIS_URL_STATUS
          value: "https://migs.mastercard.com.au/vpcdps"
        - name: AXIS_MERCHANT_ID
          valueFrom:
            secretKeyRef:
              name: egov-pg-service
              key: axismerchantid
        - name: AXIS_MERCHANT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: egov-pg-service
              key: axismerchantsecret
        - name: AXIS_MERCHANT_USER
          valueFrom:
            secretKeyRef:
              name: egov-pg-service
              key: axismerchantuser
        - name: AXIS_MERCHANT_PWD
          valueFrom:
            secretKeyRef:
              name: egov-pg-service
              key: axismerchantpwd
        - name: AXIS_MERCHANT_ACCESS_CODE
          valueFrom:
            secretKeyRef:
              name: egov-pg-service
              key: axismerchantaccesscode
        # - name: PAYTM_MERCHANT_ID
        #   valueFrom:
        #     secretKeyRef:
        #       name: egov-pg-service
        #       key: paytmmerchantid
        # - name: PAYTM_MERCHANT_SECRET_KEY
        #   valueFrom:
        #     secretKeyRef:
        #       name: egov-pg-service
        #       key: paytmmerchantsecret
        # - name: PHONEPE_MERCHANT_ID
        #   valueFrom:
        #     secretKeyRef:
        #       name: egov-pg-service
        #       key: phonepemerchantid
        # - name: PHONEPE_MERCHANT_SECRET_KEY
        #   valueFrom:
        #     secretKeyRef:
        #       name: egov-pg-service
        #       key: phonepemerchantsecret
        # - name: PHONEPE_MERCHANT_SECRET_INDEX
        #   value: "1"
        - name: SPRING_KAFKA_BOOTSTRAP_SERVERS
          valueFrom:
            configMapKeyRef:
              name: egov-config
              key: kafka-brokers
        - name: APP_TIMEZONE
          valueFrom:
            configMapKeyRef:
              name: egov-config
              key: timezone
        - name: JAVA_OPTS
          value: "{{conf['egov-pg-service']['heap'] or '-Xmx64m -Xms64m'}}"
        - name: JAVA_ARGS
          value: "{{conf['egov-pg-service']['java-args']}}"
        - name: JAVA_ENABLE_DEBUG
          value: "{{conf['egov-pg-service']['java-debug']}}"          
        - name: SPRING_JPA_SHOW_SQL
          value: "{{conf['egov-config']['spring-jpa-show-sql']}}"
        - name: SERVER_PORT
          value: "8080"
        - name: JAEGER_SERVICE_NAME
          value: egov-pg-service
        - name: JAEGER_SAMPLER_TYPE
          value: "{{conf['jaeger-config']['sampler-type']}}"
        - name: JAEGER_SAMPLER_PARAM
          value: "{{conf['jaeger-config']['sampler-param']}}"
        - name: JAEGER_AGENT_HOST
          value: "{{conf['jaeger-config']['host']}}"
        - name: JAEGER_AGENT_PORT
          value: "{{conf['jaeger-config']['port']}}"
        - name: SECURITY_BASIC_ENABLED
          value: "false"  
        - name: MANAGEMENT_SECURITY_ENABLED
          value: "false" 
        resources:
          requests:
            memory: "128Mi"
          limits:
            memory : "{{conf['egov-pg-service']['memory_limits'] or "256Mi"}}"